imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# FOS ElasticaBundle
fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        app: ~

# Nelmio CORS Configuration
nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ['*']
        allow_headers: ['*']
        allow_methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
        max_age: 3600
        hosts: []
        origin_regex: false

# FOSRest Configuration
fos_rest:
    body_listener: true
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/', priorities: [ 'text/html', '*/*'], fallback_format: html, prefer_extension: true }
            # - { path: '^/', priorities: ['json'], fallback_format: json, prefer_extension: false }
    param_fetcher_listener: force
    view:
        view_response_listener: 'force'
        formats:
            json: true
    versioning:
        enabled: true
        default_version: latest

# RabbitMQ bundle configuration
#old_sound_rabbit_mq:
#    connections:
#        default:
#            host:     'localhost'
#            port:     5672
#            user:     'rabbit'
#            password: 'mq'
#            vhost:    '/'
#            lazy:     false
#            connection_timeout: 3
#            read_write_timeout: 3
#
#            # requires php-amqplib v2.4.1+ and PHP5.4+
#            keepalive: false
#
#            # requires php-amqplib v2.4.1+
#            heartbeat: 0
#
#            #requires php_sockets.dll
#            use_socket: true # default false
#        another:
#            # A different (unused) connection defined by an URL. One can omit all parts,
#            # except the scheme (amqp:). If both segment in the URL and a key value (see above)
#            # are given the value from the URL takes precedence.
#            # See https://www.rabbitmq.com/uri-spec.html on how to encode values.
#            url: 'amqp://rabbit:mq@localhost:5672/vhost?lazy=1&connection_timeout=6'
#    producers:
#        create_book:
#            connection:       default
#            exchange_options: {name: 'create-book', type: direct}
#            service_alias:    my_app_service # no alias by default
#    consumers:
#        create_book:
#            connection:       default
#            exchange_options: {name: 'create-book', type: direct}
#            queue_options:    {name: 'create-book'}
#            callback:         upload_picture_service
